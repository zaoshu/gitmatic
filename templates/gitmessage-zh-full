# <类型>: <内容概述> 
# 例如：
#   fix: 创建多个隐藏层时神经网络实例化失败
# |<-----  请保持单行简介长度不超过此行长度  ----->|

# <详情>
# 提供该次变动的详细上下文，包括但不限于：
#   1. 改动内容详细叙述(what) 
#   2. 改动原因(why) 
#   3. 可能造成的影响(side-effect)
# 注意：不要叙述「如何去做出这些改动」(how)
# |<----------------  请保持每行内容长度不超过该行长度  ---------------->|


# <引用来源> <引用内容>
# 将指向相关任务、工单、文章或者其它外部资源的链接或索引附带在下方
# 例如：
#   
#   GitHub issue resolve #23 
#
#   带有该 commit 的 pull request 在被 merge 进入
#   默认分支后，Github 上的 Issue #23 将会被自动关闭。
#   详见：http://bit.ly/ghgmkw
#   
#
#   JIRA ZAOS-132 #done 使用了 hack 的方式来修复改问题
#
#   Jira 中 key 为 ZAOS-132 的 issue 将会执行名为 done 
#   的 workflow 转换，并留下内容为「使用了 hack 的方式来
#   修复改问题」的评论。详见：http://bit.ly/jirasgm


# --- COMMIT END ---
# 类型枚举：
#    feat     (新功能)
#    fix      (问题修复)
#    refactor (代码重构)
#    style    (代码风格改动、格式变化等，无实现改动)
#    docs     (文档更新)
#    test     (增加、重构测试，无实现改动)
#    chore    (修改一些配置文件如 .gitignore 等，无实现改动)
# --------------------
# 记住如下原则
#   <内容概述>中使用命令（祈使）语气
#   <内容概述>行尾不带句号
#   <内容概述>与<详情>之间用空行隔开
#   <详情>中只叙述改动的内容和原因，不要包括「改动是如何做出的」
#   <详情>中可以使用带“-”符号的多行来表示要点列表
# --------------------
# 该模板由 PainCompiler 改编。原始模板见：
# https://gist.github.com/adeekshith/cd4c95a064977cdc6c50
